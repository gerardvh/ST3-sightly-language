%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - sightly
scope: source.sightly
contexts:
  main:
    - include: option
    - include: optionList
    - include: operators
    - include: strings

  strings:
    - include: string-quoted-single
    - include: string-quoted-double
    
  string-quoted-single:
    - match: "'"
      scope: punctuation.definition.string.begin.sightly
      push:
        - meta_scope: string.quoted.single.sightly
        - match: "'"
          scope: punctuation.definition.string.end.sightly
          pop: true
        - match: \\.
          scope: constant.character.escape.sightly

  string-quoted-double:
    - match: '"'
      scope: punctuation.definition.string.begin.sightly
      push:
        - meta_scope: string.quoted.double.sightly
        - match: '"'
          scope: punctuation.definition.string.end.sightly
          pop: true
        - match: \\.
          scope: constant.character.escape.sightly

  expression:
    - meta_content_scope: meta.expression.sightly

  exprNode:
    - meta_content_scope: meta.exprNode.sightly
    # Each part of an expression

  optionList:
    - meta_content_scope: meta.optionList.sightly
    - match: '@'
      scope: keyword.operator.optionList.sightly
    - include: option
    - include: optionValues

  option:
    - meta_content_scope: meta.optionList.option.sightly
    - match: ([a-zA-Z_]+[a-zA-Z0-9_-]*)\s?(=)\s?() # TODO: add 3rd capture for the optionValues
      captures:
        1: constant.other.directive.option.id.sightly
        2: keyword.operator.assignment.sightly
    # Match on an `=` and the second piece is an `optionValues` section

  optionValues:
    - meta_content_scope: meta.optionList.optionValues.sightly
    # can include an `exprNode` or a `valueList`

  valueList:
    - meta_content_scope: meta.valueList.sightly

  operators:
    - match: '&&|!|\|\||\?|:'
      scope: keyword.operator.logical.sightly